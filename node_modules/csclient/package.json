{
  "name": "csclient",
  "version": "0.2.2",
  "description": "An API client for the CloudStack",
  "keywords": [
    "cloudstack",
    "api",
    "client"
  ],
  "author": {
    "name": "Ragnar B. Johannsson",
    "email": "ragnar@igo.is"
  },
  "devDependencies": {
    "nodeunit": "*"
  },
  "scripts": {
    "test": "node_modules/.bin/nodeunit test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ragnar-johannsson/csclient.git"
  },
  "main": "./lib/client",
  "readme": "## CloudStack API client for Node.js\n\n\n### Installation\n\n```bash\n$ npm install csclient\n```\n\n\n### Usage\n\nThe client has two methods of note: <b>execute(cmd, params, callback)</b>, where <b><i>cmd</i></b> is a string with the actual API command and <b><i>params</i></b> is a key-value object with optional parameters. The other one, <b>executeAsync(cmd, params, callback)</b>, is for CloudStack's async API calls, polling until a result is received, or a timeout reached.\n\n```javascript\nvar CloudStackClient = require('csclient');\n\nvar options = {\n    apiKey: 'abcd1234',\n    secretKey: 'efgh5678',\n    serverURL: 'http://host:port/client/api?'\n};\n\nvar client = new CloudStackClient(options);\n\nvar handleError = function (err) {\n    if (err.name === 'APIError') {\n        switch (err.code) {\n        case 401:\n            return console.log('Unauthorized.');\n        case 530:\n            return console.log('Parameter error: ' + err.message);\n        default:\n            return console.log('API error ' + err.code + ': ' + err.message);\n        }\n    } else {\n        return console.log('Oops, I did it again. ' + err.message);\n    }\n}\n\nclient.execute('listVirtualMachines', {}, function (err, response) {\n    if (err) return handleError(err);\n\n    response = response.listvirtualmachinesresponse;\n    for (var i = 0; i < response.virtualmachine.length; i++) {\n        var vm = response.virtualmachine[i];\n        console.log(vm.name + \" is in state \" + vm.state);\n    }\n});\n\nclient.executeAsync('associateIpAddress', { zoneid: 1 }, function (err, response) {\n    if (err) return handleError(err);\n\n    response = response.associateipaddressresponse;\n    console.log('Id of IP address associated: ' + response.id);\n});\n```\n\n\n### License\n\nThis is free software released under the Simplified BSD License. See the LICENSE file for further information.\n",
  "_id": "csclient@0.2.2",
  "dist": {
    "shasum": "34596ad55f22b7d257b1dbadaf12c515b2e6a633",
    "tarball": "http://registry.npmjs.org/csclient/-/csclient-0.2.2.tgz"
  },
  "maintainers": [
    {
      "name": "ragnarb",
      "email": "ragnar@igo.is"
    }
  ],
  "directories": {},
  "_shasum": "34596ad55f22b7d257b1dbadaf12c515b2e6a633",
  "_from": "csclient@",
  "_resolved": "https://registry.npmjs.org/csclient/-/csclient-0.2.2.tgz"
}
